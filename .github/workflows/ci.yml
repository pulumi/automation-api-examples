name: Run Automation API Examples
"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - run-example-tests-command

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: public
  ARM_LOCATION: westus
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_REGION: us-west-2
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PULUMI_CONFIG_PASSPHRASE: password

jobs:
  dotnet-local-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: dotnet run
        working-directory: dotnet/LocalProgram/automation
      - name: Destroy app
        run: dotnet run destroy
        working-directory: dotnet/LocalProgram/automation
    strategy:
      matrix:
        dotnet-version:
          - 6.0.x
  dotnet-inline-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: dotnet run
        working-directory: dotnet/InlineProgram
      - name: Destroy app
        run: dotnet run destroy
        working-directory: dotnet/InlineProgram
    strategy:
      matrix:
        dotnet-version:
          - 6.0.x
  dotnet-inline-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Generate KMS key
        run: |
          echo "KMS_KEY<<EOF" >> $GITHUB_ENV
          aws kms create-key --output text --query KeyMetadata.KeyId >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Deploy app
        run: dotnet run
        working-directory: dotnet/InlineSecretsProvider
      - name: Destroy app
        run: dotnet run destroy
        working-directory: dotnet/InlineSecretsProvider
      - name: Delete the KMS key
        run: "aws kms schedule-key-deletion --key-id $KMS_KEY --pending-window-in-days 7"
    strategy:
      matrix:
        dotnet-version:
          - 6.0.x
  dotnet-database-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: dotnet run
        working-directory: dotnet/DatabaseMigration
      - name: Destroy app
        run: dotnet run destroy
        working-directory: dotnet/DatabaseMigration
    strategy:
      matrix:
        dotnet-version:
          - 6.0.x
  dotnet-crosslanguage:
    runs-on: ubuntu-latest
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: dotnet run
        working-directory: dotnet/CrossLanguage/automation
      - name: Destroy app
        run: dotnet run destroy
        working-directory: dotnet/CrossLanguage/automation
    strategy:
      matrix:
        dotnet-version:
          - 6.0.x
        go-version:
          - 1.19.x
  python-crosslanguage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/cross_language/automation
      - name: Deploy app
        run: python main.py
        working-directory: python/cross_language/automation
      - name: Destroy app
        run: python main.py destroy
        working-directory: python/cross_language/automation
    strategy:
      matrix:
        python-version:
          - 3.9.x
        go-version:
          - 1.16.x
  python-database-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/database_migration
      - name: Deploy app
        run: python main.py
        working-directory: python/database_migration
      - name: Destroy app
        run: python main.py destroy
        working-directory: python/database_migration
    strategy:
      matrix:
        python-version:
          - 3.9.x
        go-version:
          - 1.16.x
  python-inline-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/inline_program
      - name: Deploy app
        run: python main.py
        working-directory: python/inline_program
      - name: Destroy app
        run: python main.py destroy
        working-directory: python/inline_program
    strategy:
      matrix:
        python-version:
          - 3.9.x
        go-version:
          - 1.16.x
  python-inline-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/inline_secrets_provider
      - name: Setup local directory
        run: mkdir ~/.pulumi-local
      - name: Generate KMS key
        run: |
          echo "KMS_KEY<<EOF" >> $GITHUB_ENV
          aws kms create-key --output text --query KeyMetadata.KeyId >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Deploy app
        run: python main.py
        working-directory: python/inline_secrets_provider
      - name: Destroy app
        run: python main.py destroy
        working-directory: python/inline_secrets_provider
      - name: Delete the KMS key
        run: "aws kms schedule-key-deletion --key-id $KMS_KEY --pending-window-in-days 7"
    strategy:
      matrix:
        python-version:
          - 3.9.x
        go-version:
          - 1.16.x
  python-testing-local-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/testing_local_program
      - run: python -m unittest
        working-directory: python/testing_local_program
  python-local-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: pip install -r requirements.txt
        working-directory: python/local_program/automation
      - name: Deploy app
        run: python main.py
        working-directory: python/local_program/automation
      - name: Destroy app
        run: python main.py destroy
        working-directory: python/local_program/automation
    strategy:
      matrix:
        python-version:
          - 3.9.x
        go-version:
          - 1.16.x
  go-database-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: go mod download
        working-directory: go/database_migration
      - name: Deploy app
        run: go run main.go
        working-directory: go/database_migration
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/database_migration
    strategy:
      matrix:
        go-version:
          - 1.16.x
  go-git-repo-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: go mod download
        working-directory: go/git_repo_program
      - name: Deploy app
        run: go run main.go
        working-directory: go/git_repo_program
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/git_repo_program
    strategy:
      matrix:
        go-version:
          - 1.20.x
  go-cli-installation:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: go mod download
        working-directory: go/cli_installation
      - name: Deploy app
        run: go run main.go
        working-directory: go/cli_installation
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/cli_installation
    strategy:
      matrix:
        go-version:
          - 1.20.x
  go-inline-local-hybrid:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: go run main.go
        working-directory: go/inline_local_hybrid/automation
      - name: Test CLI Output
        run: pulumi stack
        working-directory: go/inline_local_hybrid/cli
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/inline_local_hybrid/automation
    strategy:
      matrix:
        go-version:
          - 1.16.x
  go-local-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: go run main.go
        working-directory: go/local_program/automation
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/local_program/automation
    strategy:
      matrix:
        go-version:
          - 1.16.x
  go-inline-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Deploy app
        run: go run main.go
        working-directory: go/inline_program
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/inline_program
    strategy:
      matrix:
        go-version:
          - 1.16.x
  go-inline-program-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Setup local directory
        run: mkdir ~/.pulumi-local
      - name: Generate KMS key
        run: |
          echo "KMS_KEY<<EOF" >> $GITHUB_ENV
          aws kms create-key --output text --query KeyMetadata.KeyId >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Deploy app
        run: go run main.go
        working-directory: go/inline_secrets_provider
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/inline_secrets_provider
      - name: Delete the KMS key
        run: "aws kms schedule-key-deletion --key-id $KMS_KEY --pending-window-in-days 7"
    strategy:
      matrix:
        go-version:
          - 1.16.x
  go-inline-program-secrets-passphrase:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - name: Setup local directory
        run: mkdir ~/.pulumi-local
      - name: Deploy app
        run: go run main.go
        working-directory: go/inline_passphrase_secrets_provider
      - name: Destroy app
        run: go run main.go destroy
        working-directory: go/inline_passphrase_secrets_provider
    strategy:
      matrix:
        go-version:
          - 1.16.x
  node-inline-program:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/crossLanguage-tsnode/automation
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/crossLanguage-tsnode/automation
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/crossLanguage-tsnode/automation
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-database-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/databaseMigration-ts
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/databaseMigration-ts
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/databaseMigration-ts
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-inline-program-js:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/inlineProgram-js
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/inlineProgram-js
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/inlineProgram-js
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-inline-program-ts:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/inlineProgram-ts
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/inlineProgram-ts
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/inlineProgram-ts
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-inline-program-tsnode:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/inlineProgram-tsnode
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/inlineProgram-tsnode
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/inlineProgram-tsnode
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-inline-secrets-provider-ts:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/inlineSecretsProvider-ts
      - name: Setup local directory
        run: mkdir ~/.pulumi-local
      - name: Generate KMS key
        run: |
          echo "KMS_KEY<<EOF" >> $GITHUB_ENV
          aws kms create-key --output text --query KeyMetadata.KeyId >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/inlineSecretsProvider-ts
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/inlineSecretsProvider-ts
      - name: Delete the KMS key
        run: "aws kms schedule-key-deletion --key-id $KMS_KEY --pending-window-in-days 7"
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
  node-local-program-tsnode:
    runs-on: ubuntu-latest
    steps:
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: Install Latest Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: echo "Currently Pulumi $(pulumi version) is installed"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: examples@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - uses: actions/checkout@v2
      - name: Login Local
        run: pulumi login --local
      - run: yarn install
        working-directory: nodejs/localProgram-tsnode/website
      - run: yarn install
        working-directory: nodejs/localProgram-tsnode/automation
      - name: Deploy app
        run: yarn start
        working-directory: nodejs/localProgram-tsnode/automation
      - name: Destroy app
        run: yarn start destroy
        working-directory: nodejs/localProgram-tsnode/automation
    strategy:
      matrix:
        node-version:
          - 20.x
        go-version:
          - 1.16.x
